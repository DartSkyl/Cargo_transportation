import csv
from loader import bot_base, roles_dict, blacklist
from keyboards import admin_main_menu, editor_on, editor_panel
from utils.admin_router import admin_router
from utils.order_board import board_with_order
from states import UserManipulation, AdminOrderEditor

from aiogram.types import Message, FSInputFile, CallbackQuery
from aiogram import F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext


@admin_router.message(Command('admin'))
async def open_admin_menu(msg: Message):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    await msg.answer(text='–û—Ç–∫—Ä—ã—Ç–∞ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', reply_markup=admin_main_menu)


@admin_router.message(F.text == 'üîé –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
async def get_all_users(msg: Message):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —é–∑–µ—Ä–æ–≤"""
    all_user = await bot_base.load_user_from_base()

    table_header = ('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–†–æ–ª—å', '–ó–∞–∫–∞–∑–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ', '–ó–∞–∫–∞–∑–æ–≤ –∑–∞–∫—Ä—ã—Ç–æ',
                    '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–Æ–∑–µ—Ä–Ω—ç–π–º', '–ü–æ—á—Ç–∞', '–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ')

    all_user.insert(0, table_header)  # –í—Å—Ç–∞–≤–∏–º —à–∞–ø–∫—É —Ç–∞–±–ª–∏—Ü—ã

    with open('users_list.csv', 'w', newline='') as file:
        csv.writer(file).writerows(all_user)

    users = FSInputFile('users_list.csv')
    await msg.answer_document(document=users)


@admin_router.message(F.text == 'üìÇ –ê—Ä—Ö–∏–≤ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞–∫–∞–∑–æ–≤')
async def get_orders_archive(msg: Message):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–π–ª —Å –∏—Å—Ç–æ—Ä–∏–µ–π –∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞–∫–∞–∑–æ–≤"""
    orders_history = await bot_base.get_orders_history()

    table_header = ("–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞", "ID –∑–∞–∫–∞–∑–∞", "ID –∑–∞–∫–∞–∑—á–∏–∫–∞", "ID –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è",
                    "–ü—É–Ω–∫—Ç –æ—Ç–≥—Ä—É–∑–∫–∏", "–ü—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏", "–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞", "–í—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω",
                    "–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ", "–ö–æ–Ω—Ç–∞–∫—Ç—ã")

    orders_history.insert(0, table_header)  # –í—Å—Ç–∞–≤–∏–º —à–∞–ø–∫—É —Ç–∞–±–ª–∏—Ü—ã

    with open('orders_history.csv', 'w', newline='') as file:
        csv.writer(file).writerows(orders_history)

    orders = FSInputFile('orders_history.csv')
    await msg.answer_document(document=orders)


@admin_router.message(F.text == 'ü§ê –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
async def start_ban_user(msg:Message, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ–º –±–∞–Ω–∏—Ç—å —é–∑–µ—Ä–∞"""
    await state.set_state(UserManipulation.ban_user)
    await msg.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å:')


@admin_router.message(UserManipulation.ban_user)
async def ban_user(msg: Message, state: FSMContext):
    """–ë–∞–Ω–∏–º —é–∑–µ—Ä–∞"""
    if msg.text.isdigit():
        baning_user_id = int(msg.text)
        blacklist.append(baning_user_id)
        await bot_base.delete_user(baning_user_id)

        # –ß—Ç–æ –±—ã —Ä–æ—É—Ç–µ—Ä—ã –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –µ–≥–æ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å
        try:
            if baning_user_id in roles_dict['executor']:
                roles_dict['executor'].remove(baning_user_id)
            elif baning_user_id in roles_dict['customer']:
                roles_dict['customer'].remove(baning_user_id)
            else:
                roles_dict['all_roles'].remove(baning_user_id)

            await msg.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!')
            await state.clear()
        except ValueError:
            await msg.answer('–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')
    else:
        await msg.answer('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!')


@admin_router.message(F.text == 'üòÆ‚Äçüí® –†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
async def start_unban_user(msg: Message, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await state.set_state(UserManipulation.unban_user)
    await msg.answer('–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å:')


@admin_router.message(UserManipulation.unban_user)
async def unban_user(msg: Message, state: FSMContext):
    """–†–∞–∑–±–∞–Ω–∏–º —é–∑–µ—Ä–∞"""
    if msg.text.isdigit():
        try:
            blacklist.remove(int(msg.text))
            await msg.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!')
        except ValueError:
            await msg.answer('–¢–∞–∫–æ–≥–æ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ')
    else:
        await msg.answer('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º!')


@admin_router.message(F.text == 'üìã –í—Å–µ –∑–∞–∫–∞–∑—ã')
async def view_all_orders(msg: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤—Å–µ –∑–∞–∫–∞–∑—ã —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –Ω–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    all_orders = await board_with_order.get_all_orders()
    for order in all_orders:
        await msg.answer(text=order.get_info_for_owner_and_executor(),
                         reply_markup=editor_on(order_id=order.get_order_id()))


@admin_router.callback_query(F.data.startswith('edit_'))
async def order_editor(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –∑–∞–∫–∞–∑–æ–≤ –∏ –≤–Ω–æ—Å–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è"""
    editor_dict = {
        'edit_departure': (AdminOrderEditor.departure, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –æ—Ç–≥—Ä—É–∑–∫–∏:'),
        'edit_delivery': (AdminOrderEditor.delivery, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏:'),
        'edit_cargo': (AdminOrderEditor.cargo, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞:'),
        'edit_time': (AdminOrderEditor.time, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:'),
        'edit_price': (AdminOrderEditor.price, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ:'),
        'edit_contacts': (AdminOrderEditor.contacts, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã:')
    }

    try:
        await state.set_state(editor_dict[callback.data][0])
        await callback.message.answer(editor_dict[callback.data][1])

    except KeyError:  # –ï—Å–ª–∏ –ø—Ä–∏—à–µ–ª –∫–æ–ª–ª–±—ç–∫ —Å ID –ó–∞–∫–∞–∑–∞
        edit_order = await board_with_order.get_order_by_id(callback.data.replace('edit_', ''))
        await state.set_data({'edit_order': edit_order})
        await callback.message.delete()
        await callback.message.answer(text=edit_order.get_info_for_owner_and_executor(),
                                      reply_markup=editor_panel)


@admin_router.message(AdminOrderEditor.departure)
async def edit_departure(msg: Message, state: FSMContext):
    """–ú–µ–Ω—è–µ–º –ø—É–Ω–∫—Ç –æ—Ç–≥—Ä—É–∑–∫–∏"""
    order_for_editing = (await state.get_data())['edit_order']
    order_for_editing.edit_order_departure(new_departure=msg.text)
    await msg.answer('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑:')
    await msg.answer(text=order_for_editing.get_info_for_owner_and_executor(),
                     reply_markup=editor_on(order_for_editing.get_order_id()))


@admin_router.message(AdminOrderEditor.delivery)
async def edit_delivery(msg: Message, state: FSMContext):
    """–ú–µ–Ω—è–µ–º –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏"""
    order_for_editing = (await state.get_data())['edit_order']
    order_for_editing.edit_order_delivery(new_delivery=msg.text)
    await msg.answer('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑:')
    await msg.answer(text=order_for_editing.get_info_for_owner_and_executor(),
                     reply_markup=editor_on(order_for_editing.get_order_id()))


@admin_router.message(AdminOrderEditor.cargo)
async def edit_cargo(msg: Message, state: FSMContext):
    """–ú–µ–Ω—è–µ–º –≥—Ä—É–∑"""
    order_for_editing = (await state.get_data())['edit_order']
    order_for_editing.edit_order_cargo_(new_cargo=msg.text)
    await msg.answer('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑:')
    await msg.answer(text=order_for_editing.get_info_for_owner_and_executor(),
                     reply_markup=editor_on(order_for_editing.get_order_id()))


@admin_router.message(AdminOrderEditor.time)
async def edit_time(msg: Message, state: FSMContext):
    """–ú–µ–Ω—è–µ–º –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏"""
    order_for_editing = (await state.get_data())['edit_order']
    order_for_editing.edit_order_time(new_time=msg.text)
    await msg.answer('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑:')
    await msg.answer(text=order_for_editing.get_info_for_owner_and_executor(),
                     reply_markup=editor_on(order_for_editing.get_order_id()))


@admin_router.message(AdminOrderEditor.price)
async def edit_price(msg: Message, state: FSMContext):
    """–ú–µ–Ω—è–µ–º –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ"""
    order_for_editing = (await state.get_data())['edit_order']
    order_for_editing.edit_order_price(new_price=msg.text)
    await msg.answer('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑:')
    await msg.answer(text=order_for_editing.get_info_for_owner_and_executor(),
                     reply_markup=editor_on(order_for_editing.get_order_id()))


@admin_router.message(AdminOrderEditor.contacts)
async def edit_contacts(msg: Message, state: FSMContext):
    """–ú–µ–Ω—è–µ–º –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏"""
    order_for_editing = (await state.get_data())['edit_order']
    order_for_editing.edit_order_contacts(new_contacts=msg.text)
    await msg.answer('–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑:')
    await msg.answer(text=order_for_editing.get_info_for_owner_and_executor(),
                     reply_markup=editor_on(order_for_editing.get_order_id()))


@admin_router.message(Command('get_log'))
async def get_bot_log(msg: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –≤—ã–≥—Ä—É–∂–∞–µ—Ç –≤ —á–∞—Ç —Ñ–∞–π–ª —Å –ª–æ–≥–æ–º –±–æ—Ç–∞"""
    log_file = FSInputFile('bot.log')
    await msg.answer_document(document=log_file)
